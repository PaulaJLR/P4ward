Welcome to Protacs Pipeline's documentation!
============================================

Program Paths
-------------

* ``megadock``
* ``obabel``
* ``rxdock_root``


general
-------

* ``overwrite`` = ``true`` | ``false``.

If there are records from previous runs of the pipeline, but they should be ignored and a overwritten with a new run starting from scratch. Default: ``false``.

* ``receptor``

Path to the receptor protein file, in pdb format. Default: ``receptor.pdb``.

* ``ligase``

Path to the ligase protein file, in pdb format. Default: ``ligase.pdb``.

* ``protacs``

Path to the protacs filelist, in smiles format. Default: ``protacs.smiles``

* ``receptor_ligand``

Path to the receptor ligand file, in mol2 format. Default: ``receptor_ligand.mol2``.

* ``ligase_ligand``

Path to the ligase ligand file, in mol2 format. Default: ``ligase_ligand.mol2``.

* ``rdkit_ligands_cleanup``

RDKit's sanitization of small molecules may fail for some structures. This keyword may be used to turn it off. Default: ``True``.

* ``num_processors`` 

How many processes to use for the parallel processing steps in the pipeline. Default: ``8``.


protein_prep
------------

* ``pdbfixer``

Whether to use pdbfixer to fix the structures before running the pipeline and ensure compatibility with all modules. Highly recommended. Default: ``True``.

* ``pdbfixer_ignore_extremities``

When adding missing residues, pdbfixer can be made to ignore protein extremities. This way, it will not attempt to add long sequences if the protein is truncated. Default: ``True``

* ``pdbfixer_ph``

pH to add hydrogens for. Default: ``7.0``

* ``minimize``

Use openmm to minimize the protein structure before running. Default: ``True``

* ``minimize_maxiter``

Maximum minimization steps to perform. `0` indicates until convergence. Default: ``0``

* ``minimize_h_only``

Minimize only the bonds to hydrogen and keep the rest of the protein restrained. Use this option if minimization is to be used only to optimize the coordinates of the hydrogens previously added. Default: ``True``


megadock
--------

Run Megadock for protein-protein docking of receptor and ligase. The following options regulate its usage:

* ``run_docking``

Toggles protein-protein docking with Megadock. Default: ``True``.

* ``num_predictions`` 

Out of all the protein poses generated by megadock, how many will go into the ranked output file written by megadock and parsed by P4ward. P4ward's default: ``162000``, Megadock's default: ``2000``.

* ``num_rotational_angles`` 

How many angles to rotate the ligase protein by. P4ward's default: ``54000``, Megadock's default: ``3600``.

* ``num_predictions_per_rotation`` 

How many poses to generate per rotation. P4ward's default: ``3``, Megadock's default: ``1``.

* ``run_docking_output_file``

The main megadock output file path, where the docking results are placed. Default: ``megadock.out``

* ``run_docking_log_file``

The log file which will contain what megadock would normally print to the terminal. Default: ``megadock_run.log``


protein_filter
--------------

* ``ligand_distances``

.. ADD REFERENCE TO EXPLANATION WHEN READY
Toggle to filter the protein poses based on the proximity of the ligands after docking. For more information on how this is done, please refer to [XXXXX]. Default: ``True``.

* ``filter_dist_cutoff``

If ``ligand_distances`` is True, then this setting defines the distance cutoff. The option can either be a number or ``auto`` to generate a proximity cutoff based on the protac size. 

* ``filter_dist_sampling_type``

In order to calculate the distance between the ligands in the protac structure, P4ward employs RDKit to sample the unbound protac conformations. This setting defines if the conformation sampled should be three or two dimensional. 3D structures generate more restrictive distance values, while 2D structures will often yield the maximum possible distance between the ligands. Options: ``3D`` or ``2D``. Default: ``3D``.

* ``crl_model_clash``

Whether the protein poses should be filtered based on clashes against the CRL model. Default: ``True``.

* ``clash_threshold`` 

Distance between two atoms (not including hydrogens) that is considered a clash. Default: ``1.0``.

* ``clash_count_tol``

How many clashing atoms until the protein pose is considered to be clashing. Default: ``10``.

* ``accessible_lysines``

Whether to use the accessible lysine filter. Default: ``True``.

* ``lysine_count``

How many accessible lysines should a protein pose have in order to be considered productive. Default: ``1``.

* ``lys_sasa_cutoff``

The SASA value above which a lysine is considered to be at the protein surface and therefore is checked for accessibility. Default: ``2.5``.

* ``overlap_dist_cutoff``

Also described as "LOCut". The distance value between a potentially occuding atom and the segment between lysine and ubiquitin, below which the atom is considered to be occluding and the lysine is then considered inaccessible. Default: ``5.0``.

* ``vhl_ubq_dist_cutoff``

Maximum distance between lysine and ubiquitin C-terminus for the VHL model. Default: ``60.0``.

* ``crbn_ubq_dist_cutoff``

Maximum distance between lysine and ubiquitin C-terminus for the CRBN model. Default: ``16.0``.

* ``e3``

Which E3 model to use. Values can be ``vhl`` or ``crbn``. Default: ``vhl``.


protein_ranking
---------------

* ``cluster_poses_redundancy``

Toggle clustering for redundancy. Please see [XXXXX] for a description of this clustering step. Default: ``False``.

* ``cluster_poses_trend``

Toggle clustering for trend capture of ternary complex modelling results. Please see [XXXXX] for a description of this clustering step. Default: ``True``.

* ``clustering_cutoff_redund``

Distance cutoff for redundancy clustering. Default: ``3.0``

* ``clustering_cutoff_trend``

Distance cutoff for trend clustering. Default: ``10.0``

* ``cluster_redund_repr``

Which cluster component should be the cluster representative. Values can be ``best``, denoting best megadock score in the cluster, or ``centroid``, denoting the cluster centroid. For the ``centroid`` option, if the cluster has only two components, the best scoring pose is selected as representative. Default: ``centroid``

* ``top_poses``

How many poses should be considered top poses for sampling. This value should be the same as (or higher than)``num_predictions`` if the user intends to perform ternary complex rescoring (thus generating p4ward's final score) and trend clustering. If the user intends to model ternary complexes for N top scoring protein poses, then this value should be adjusted accordingly. Default: ``162000``

* ``generate_poses``

Which set off protein poses should be written to disk in pdb format. If the user intends to perform RXdock rescoring, ternary complex rescoring (thus generating p4ward's final score) and/or trend clustering, then this should be set to either ``filtered`` or ``all``. Values can be ``none``, ``all``, ``filtered``, ``top``.

* ``generate_poses_altlocA``

Keep only alternate location A when generating pdb files. Default: ``True``

* ``generated_poses_folder``

Folder name to save the protein pose pdb files to.

* ``rescore_poses``

Use P4ward's final score. Default: ``True``


protac_sampling
---------------

* ``unbound_protac_num_confs``

How many conformations for the unbound protac should be generated with RDKit. Default: ``10``


Linker sampling
---------------

* ``rdkit_sampling``

Use rdkit to perform protac sampling. Default: ``True``

* ``protac_poses_folder``

Name of the folder where the generated protac sdf will reside.
Default: ``protac_sampling``

* ``extend_flexible_small_linker``

If the linker consists of very few atoms, protac sampling will fail because small deviations on the extremities' positions will make bonds unfeasible. With this option, if the pipeline detects that the linker is short (see ``min_linker_length``), it will then consider more neighbouring atoms as flexible (see ``extend neighbour number``).
Default: ``True``

* ``extend_neighbour_number``

If ``extend_flexible_small_linker`` is turned on, then this flag controls how many neighbouring atoms should become flexible.
Default: ``2``

* ``min_linker_length``

If the protac's linker contains up to this many atoms, it is considered too short and can be extended if ``extend_flexible_small_linker`` is turned on.
Default: ``2``

* ``rdkit_number_of_confs``

How many protac linker conformations to generate.
Default: ``10``

* ``rdkit_pose_rmsd_tolerance``

Some protac poses cannot be sampled while perfectly retaining the rigid ligands' positions. This flag controls how much deviation is allowed when this happens.
Default: 1.0 (angstroms)

* ``rdkit_time_tolerance``

Sometimes rdkit will get stuck for a very long time in a pose only to fail sampling. This flag sets a time limit to the time rdkit can spend in the sampling calculation for each pose. If the limit is reach, the pose is considered failed.
Default: 300 (seconds)

* ``extend_top_poses_sampled``

Extends how many protein poses are considered top (based on ``protein_ranking/top_poses``) so that the ``top_poses`` number of poses have successfully generated protac conformations. For example, if the user determined ``top_poses`` to be 10, then the top 10 protein poses will be forwarded to protac sampling. However, a few of these may not be optimal for protac conformation and so would fail at sampling. So the pipeline will try sampling for the 11th pose, 12th and so on, until exactly 10 poses have successfully generated protac conformations.
Default: ``True``

* ``extend_top_poses_score``

When extending top poses sampled, also considered the protein-ligand interaction score by disregarding positive scores. This ensures that clashing models are discarded. Default: ``True``

* ``extend_top_poses_energy``

When extending top poses sampled, also considered the internal energy calculated by RDKit. Poses where the protac internal energy is higher than the energies of all the unbound poses previously sampled are discarded. Default: ``False``

Linker ranking
--------------

* ``protac_scoring_folder``

Name of the folder where the scored protac sdf files will reside.
Default: ``protac_scoring``

* ``rxdock_score``

Use RXdock for scoring the protac conformations.
Default: ``True``

* ``rxdock_minimize``

Perform a a quick minimization with RXdock before scoring.
Default: ``False``

* ``rxdock_target_score``

Which score value to capture from RXdock. Values can be ``SCORE`` or ``SCORE.INTER``. Please refer to RXdock documentation for detailed description of these values. Default: ``SCORE.INTER``